---
layout: default
title:  "Methods"
date:   2023-10-11 15:30:00 -0400
categories: blog
---

Today, I cover Methods from the [programmingexpert.io][course-site] course.

""""""

# Key Terms

<ins>Method<ins>

A method is a function defined inside of a class definition. There are three important kinds of methods: instance methods, class methods, and static methods.

""""""

# Wisdom Nuggets

- Methods, unlike functions, can access all of the attributes associated with a specific instance of a class.

- Instance methods all take in the self parameter.

- It is good practice to initialize all the default attributes in the __init__ method.

- Getter and setter methods _are_ ___commonly___ used to encaspulate attributes. 

""""""

# Method Examples

""""""

class Group:
    def __init__(self, name, members=[]):
        self.name = name
        self.members = members

    def add(self, name):
        self.members.append(name)

    def delete(self, name):
        if name in self.members:
            self.members.remove(name)
        else:
            raise Exception("Member not in group.")

    def get_members(self):
        return sorted(self.members)

    def merge(self, group):
        merged_members = self.members + group.members
        merged_group = Group(self.name + '&' + group.name, merged_members)
        return merged_group

""""""

- Example Inputs:

g1 = Group('A-Team', ['Tim', 'Joe'])

g2 = Group("tunnelbees", ['a', 'b', 'c'])

g1.add('Sally')

g1.add('Billy')

members = g1.get_members()

print(members)

g1.delete('Joe')

members = g1.get_members()

print(members)

g3 = g1.merge(g2)

print(g3.name)

print(g3.get_members())

""""""

- Example Outputs:

['Billy', 'Joe', 'Sally', 'Tim']

['Billy', 'Sally', 'Tim']

A-Team&tunnelbees

['Billy', 'Sally', 'Tim', 'a', 'b', 'c']

""""""

[course-site]: https://www.programmingexpert.io/index